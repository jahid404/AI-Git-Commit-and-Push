const _0x2c2fc9 = _0x3915; (function (_0x27f36f, _0x1ade8f) { const _0x12c2aa = _0x3915, _0x2f99f0 = _0x27f36f(); while (!![]) { try { const _0x1ec588 = -parseInt(_0x12c2aa(0x1fd)) / (-0x490 + -0x1 * 0x1fd2 + 0x2463) + -parseInt(_0x12c2aa(0x1ef)) / (0x1b80 + -0x220f + -0x29 * -0x29) + -parseInt(_0x12c2aa(0x260)) / (0x19f * -0x11 + -0x1d * 0xcc + 0x32ae) + parseInt(_0x12c2aa(0x21c)) / (-0x15 * 0x1cd + -0x160c + 0x3be1) + parseInt(_0x12c2aa(0x240)) / (-0x1 * 0x11eb + -0xff6 + -0x21e6 * -0x1) * (-parseInt(_0x12c2aa(0x246)) / (-0x1619 + -0x10ae * -0x1 + 0x571)) + parseInt(_0x12c2aa(0x1fc)) / (0x721 + 0x4a0 * -0x4 + 0x1 * 0xb66) + parseInt(_0x12c2aa(0x1d9)) / (-0x141a + -0xa2c * -0x3 + 0x2 * -0x531); if (_0x1ec588 === _0x1ade8f) break; else _0x2f99f0['push'](_0x2f99f0['shift']()); } catch (_0x2c5569) { _0x2f99f0['push'](_0x2f99f0['shift']()); } } }(_0x57c1, 0xec81a + -0xa * -0xf3f5 + 0x4 * -0x3afe4)); function _0x3915(_0x2dee96, _0x5d7508) { const _0x5684be = _0x57c1(); return _0x3915 = function (_0x3f8344, _0x494669) { _0x3f8344 = _0x3f8344 - (0x2 * 0xe3c + -0xd * -0x1a0 + -0x2fed); let _0xba276b = _0x5684be[_0x3f8344]; return _0xba276b; }, _0x3915(_0x2dee96, _0x5d7508); } const vscode = require(_0x2c2fc9(0x1d6)), cp = require(_0x2c2fc9(0x248) + _0x2c2fc9(0x1fe)), fetch = require(_0x2c2fc9(0x1bf)); let commitIntervalId = null; const msgPrefix = _0x2c2fc9(0x1d8) + _0x2c2fc9(0x222); function activate(_0x3e5e6b) { const _0x547814 = _0x2c2fc9, _0x19cd5 = { 'xgafi': function (_0x277556, _0x115eeb) { return _0x277556(_0x115eeb); }, 'WxsoI': function (_0x2a0149, _0x1b7051) { return _0x2a0149(_0x1b7051); }, 'cERUS': _0x547814(0x227) + _0x547814(0x1eb), 'ZyZaU': _0x547814(0x239) + 'y', 'CXUeE': function (_0x121fc9, _0x2b05d1, _0x4fda67) { return _0x121fc9(_0x2b05d1, _0x4fda67); }, 'ihlMN': function (_0x2d497e, _0x2b3985) { return _0x2d497e * _0x2b3985; }, 'rTAhB': _0x547814(0x237) + _0x547814(0x20e) + _0x547814(0x252), 'DyMRo': _0x547814(0x25f) + _0x547814(0x261) + _0x547814(0x1bb) + _0x547814(0x21f) + _0x547814(0x223), 'stjoO': _0x547814(0x205), 'CXYDi': function (_0x41f423, _0x501b64) { return _0x41f423 && _0x501b64; }, 'guFaz': function (_0xf40d26, _0x163ac2, _0xb1c7c9) { return _0xf40d26(_0x163ac2, _0xb1c7c9); }, 'nQeuo': function (_0xd386dd, _0x3a373f) { return _0xd386dd * _0x3a373f; }, 'VcQgb': _0x547814(0x1bb) + _0x547814(0x21f) + _0x547814(0x1f0) + _0x547814(0x1b9), 'MnkKf': _0x547814(0x1bb) + _0x547814(0x21f) + _0x547814(0x1b7) + 'op', 'HdhWS': _0x547814(0x1bb) + _0x547814(0x21f) + _0x547814(0x206) + _0x547814(0x1f9), 'KuxYe': _0x547814(0x1bb) + _0x547814(0x21f) + _0x547814(0x20d) + _0x547814(0x23b) }, _0x24eb59 = vscode[_0x547814(0x22d)][_0x547814(0x249) + _0x547814(0x230)]?.[0x2e * 0x74 + -0x1 * -0x28e + -0x1766 * 0x1]?.[_0x547814(0x1f8)][_0x547814(0x251)], _0x5bacde = vscode[_0x547814(0x22d)][_0x547814(0x1ae) + _0x547814(0x1e9)](_0x19cd5[_0x547814(0x242)]), _0x37c414 = _0x5bacde[_0x547814(0x1f1)](_0x19cd5[_0x547814(0x1ec)]) || !(-0x190d + -0x3 * -0xb5d + 0x3 * -0x303), _0x4b7582 = Math[_0x547814(0x254)](_0x5bacde[_0x547814(0x1f1)](_0x19cd5[_0x547814(0x1c2)]) || 0x1c5c + -0x23c * -0xf + 0x5d * -0xaa, -0x76c + -0x13 * -0x18b + -0x15c7); _0x19cd5[_0x547814(0x236)](_0x24eb59, _0x37c414) ? (vscode[_0x547814(0x1e6)][_0x547814(0x231) + _0x547814(0x1e4) + 'ge'](msgPrefix + (_0x547814(0x1f5) + _0x547814(0x20c) + '..')), commitIntervalId = _0x19cd5[_0x547814(0x215)](setInterval, () => { const _0x4e8944 = _0x547814; try { _0x19cd5[_0x4e8944(0x201)](autoCommit, { 'showInfoIfNoChanges': !(0xb * -0x166 + 0x22f6 + -0x1393 * 0x1) }); } catch (_0x22ac92) { vscode[_0x4e8944(0x1e6)][_0x4e8944(0x244) + _0x4e8944(0x20b)](msgPrefix + (_0x4e8944(0x233) + _0x4e8944(0x228) + _0x4e8944(0x1de) + _0x4e8944(0x22e)) + _0x22ac92[_0x4e8944(0x204)]); } }, _0x19cd5[_0x547814(0x1b4)](0x193f * 0x1 + 0x1760 + -0x2cb7 * 0x1, _0x4b7582)), _0x19cd5[_0x547814(0x21e)](autoCommit, { 'showInfoIfNoChanges': !(0x3 * 0xae5 + -0x3d * -0x70 + -0x3b5e) })) : _0x19cd5[_0x547814(0x236)](_0x24eb59, !_0x37c414) && vscode[_0x547814(0x1e6)][_0x547814(0x231) + _0x547814(0x1e4) + 'ge'](msgPrefix + (_0x547814(0x1b8) + _0x547814(0x214) + _0x547814(0x1e7) + _0x547814(0x1c4) + _0x547814(0x1c7) + _0x547814(0x257) + _0x547814(0x207) + _0x547814(0x1fa) + _0x547814(0x1c6))); const _0x2e9432 = vscode[_0x547814(0x22f)][_0x547814(0x20f) + _0x547814(0x1e5)](_0x19cd5[_0x547814(0x259)], async () => { const _0x174976 = _0x547814; _0x19cd5[_0x174976(0x201)](autoCommit, { 'showInfoIfNoChanges': !(0x1aa7 + -0x3df * 0x3 + -0xf0a) }); }), _0x38f961 = vscode[_0x547814(0x22f)][_0x547814(0x20f) + _0x547814(0x1e5)](_0x19cd5[_0x547814(0x211)], () => { const _0x477bb0 = _0x547814; vscode[_0x477bb0(0x1e6)][_0x477bb0(0x231) + _0x477bb0(0x1e4) + 'ge'](msgPrefix + _0x477bb0(0x209)), commitIntervalId && (_0x19cd5[_0x477bb0(0x21e)](clearInterval, commitIntervalId), commitIntervalId = null); }), _0x13471f = vscode[_0x547814(0x22f)][_0x547814(0x20f) + _0x547814(0x1e5)](_0x19cd5[_0x547814(0x1af)], () => { const _0x565eff = _0x547814, _0x158736 = { 'qvTSk': function (_0x55c7fe, _0x4caf55) { const _0x5da0a4 = _0x3915; return _0x19cd5[_0x5da0a4(0x201)](_0x55c7fe, _0x4caf55); } }; commitIntervalId && (_0x19cd5[_0x565eff(0x21e)](clearInterval, commitIntervalId), commitIntervalId = null), vscode[_0x565eff(0x1e6)][_0x565eff(0x231) + _0x565eff(0x1e4) + 'ge'](msgPrefix + (_0x565eff(0x234) + _0x565eff(0x232))); const _0x2823f8 = vscode[_0x565eff(0x22d)][_0x565eff(0x1ae) + _0x565eff(0x1e9)](_0x19cd5[_0x565eff(0x242)]), _0x238dfc = Math[_0x565eff(0x254)](_0x2823f8[_0x565eff(0x1f1)](_0x19cd5[_0x565eff(0x1c2)]) || -0x4 * 0x5c8 + -0x2620 + 0x623 * 0xa, -0x2159 + 0x123a + -0xf3d * -0x1); commitIntervalId = _0x19cd5[_0x565eff(0x212)](setInterval, () => { const _0x3ea90d = _0x565eff; try { _0x158736[_0x3ea90d(0x24b)](autoCommit, { 'showInfoIfNoChanges': !(-0x10fc + 0xa31 + 0x6cc) }); } catch (_0x15ad2a) { vscode[_0x3ea90d(0x1e6)][_0x3ea90d(0x244) + _0x3ea90d(0x20b)](msgPrefix + (_0x3ea90d(0x233) + _0x3ea90d(0x23f) + '\x20') + _0x15ad2a[_0x3ea90d(0x204)]); } }, _0x19cd5[_0x565eff(0x1b3)](0x18a8 + 0x1dbd + 0x1 * -0x327d, _0x238dfc)), _0x19cd5[_0x565eff(0x201)](autoCommit, { 'showInfoIfNoChanges': !(0x201 + 0xbee * 0x1 + -0xdee) }); }), _0x11af38 = vscode[_0x547814(0x22f)][_0x547814(0x20f) + _0x547814(0x1e5)](_0x19cd5[_0x547814(0x1cf)], () => { const _0x214b3b = _0x547814; vscode[_0x214b3b(0x22f)][_0x214b3b(0x1dd) + _0x214b3b(0x1fb)](_0x19cd5[_0x214b3b(0x208)], _0x19cd5[_0x214b3b(0x1e8)]); }); _0x3e5e6b[_0x547814(0x22c) + _0x547814(0x23c)][_0x547814(0x1ad)](_0x2e9432, _0x38f961, _0x13471f, _0x11af38); } async function autoCommit(_0xabc33d = {}) { const _0x570606 = _0x2c2fc9, _0x5b04dd = { 'qZSUl': _0x570606(0x227) + _0x570606(0x1eb), 'Cjafh': _0x570606(0x22b) + 'ey', 'NXmqp': _0x570606(0x1ac) + _0x570606(0x213), 'YFfXo': _0x570606(0x224) + _0x570606(0x1d2), 'cUfsP': _0x570606(0x219) + _0x570606(0x1ee), 'JtHPQ': _0x570606(0x23a), 'zHIDs': _0x570606(0x24c) + _0x570606(0x1c9) + _0x570606(0x220) + _0x570606(0x1d5), 'XFNla': _0x570606(0x255), 'UvAWZ': _0x570606(0x1b5) + _0x570606(0x24f), 'RWvGy': _0x570606(0x210), 'SHllQ': function (_0x426dd5, _0x5e46cc, _0x332876, _0x2f139b) { return _0x426dd5(_0x5e46cc, _0x332876, _0x2f139b); }, 'FkRlE': _0x570606(0x25d), 'FzvJr': function (_0x1e475d, _0x48d320) { return _0x1e475d - _0x48d320; } }, _0x52f1b9 = vscode[_0x570606(0x22d)][_0x570606(0x1ae) + _0x570606(0x1e9)](_0x5b04dd[_0x570606(0x21b)]), _0x5443f7 = _0x52f1b9[_0x570606(0x1f1)](_0x5b04dd[_0x570606(0x20a)]), _0x45c707 = _0x52f1b9[_0x570606(0x1f1)](_0x5b04dd[_0x570606(0x25b)]) || _0x5b04dd[_0x570606(0x24a)], { showInfoIfNoChanges: _0x23d201 = !(-0x2e3 + -0x1002 + 0x12e5) } = _0xabc33d, _0x6c24f0 = vscode[_0x570606(0x22d)][_0x570606(0x249) + _0x570606(0x230)]?.[-0x1d34 + -0x1f75 + 0x3ca9]?.[_0x570606(0x1f8)][_0x570606(0x251)]; if (_0x6c24f0) try { cp[_0x570606(0x253)](_0x5b04dd[_0x570606(0x262)], { 'stdio': _0x5b04dd[_0x570606(0x23d)] }), cp[_0x570606(0x253)](_0x5b04dd[_0x570606(0x1b6)], { 'cwd': _0x6c24f0, 'stdio': _0x5b04dd[_0x570606(0x23d)] }), cp[_0x570606(0x253)](_0x5b04dd[_0x570606(0x25c)], { 'cwd': _0x6c24f0 }); const _0x4c0c18 = cp[_0x570606(0x253)](_0x5b04dd[_0x570606(0x1b0)], { 'cwd': _0x6c24f0, 'encoding': _0x5b04dd[_0x570606(0x23e)] }); if (!_0x4c0c18[_0x570606(0x1cd)]()) return; const _0x12dde7 = await _0x5b04dd[_0x570606(0x218)](generateCommitMessage, _0x4c0c18, _0x5443f7, _0x45c707); if (!_0x12dde7) return void vscode[_0x570606(0x1e6)][_0x570606(0x244) + _0x570606(0x20b)](msgPrefix + (_0x570606(0x1df) + _0x570606(0x229) + _0x570606(0x1b1) + _0x570606(0x256))); let _0x4d69f7 = _0x12dde7[_0x570606(0x1cd)]()[_0x570606(0x21a)]('\x0a'); _0x4d69f7[0x1ae8 + 0x2 * 0x2d1 + -0x77 * 0x46][_0x570606(0x1c1)](_0x5b04dd[_0x570606(0x1da)]) && _0x4d69f7[_0x570606(0x217)](), _0x4d69f7[_0x5b04dd[_0x570606(0x21d)](_0x4d69f7[_0x570606(0x1ff)], -0x1 * -0x15a3 + 0x1 * -0x153d + -0x65)][_0x570606(0x1c1)](_0x5b04dd[_0x570606(0x1da)]) && _0x4d69f7[_0x570606(0x1ea)](); let _0x5f1fdf = _0x4d69f7[_0x570606(0x202)]('\x0a')[_0x570606(0x258)](/\[ETA:.*?\]/g, '')[_0x570606(0x1cd)](); cp[_0x570606(0x253)](_0x570606(0x1e0) + _0x570606(0x1dc) + _0x5f1fdf[_0x570606(0x258)](/"/g, '\x27') + '\x22', { 'cwd': _0x6c24f0 }); } catch (_0x585072) { vscode[_0x570606(0x1e6)][_0x570606(0x244) + _0x570606(0x20b)](msgPrefix + (_0x570606(0x233) + _0x570606(0x228) + '(') + _0x585072[_0x570606(0x204)] + ')'); } else vscode[_0x570606(0x1e6)][_0x570606(0x244) + _0x570606(0x20b)](msgPrefix + (_0x570606(0x1db) + _0x570606(0x250) + _0x570606(0x1c5))); } async function generateCommitMessage(_0x5a660, _0x29ca90, _0x330ca8) { const _0x527f0e = _0x2c2fc9, _0x2ba93c = { 'OBNxx': function (_0xa5ce2d, _0x4f6595, _0x7ff532) { return _0xa5ce2d(_0x4f6595, _0x7ff532); }, 'GoTPe': _0x527f0e(0x1be), 'otRhm': _0x527f0e(0x263) + _0x527f0e(0x1d4) }; if (!_0x29ca90) return vscode[_0x527f0e(0x1e6)][_0x527f0e(0x244) + _0x527f0e(0x20b)](msgPrefix + (_0x527f0e(0x247) + _0x527f0e(0x1f4) + _0x527f0e(0x1c8) + _0x527f0e(0x1f7) + _0x527f0e(0x225) + _0x527f0e(0x203) + _0x527f0e(0x1f6))), _0x330ca8; try { const _0x1079b2 = await _0x2ba93c[_0x527f0e(0x216)](fetch, _0x527f0e(0x1bc) + _0x527f0e(0x1b2) + _0x527f0e(0x24e) + _0x527f0e(0x226) + _0x527f0e(0x1c0) + _0x527f0e(0x1cb) + _0x527f0e(0x1d3) + _0x527f0e(0x235) + _0x527f0e(0x1ca) + _0x527f0e(0x245) + _0x29ca90, { 'method': _0x2ba93c[_0x527f0e(0x1e1)], 'headers': { 'Content-Type': _0x2ba93c[_0x527f0e(0x25a)] }, 'body': JSON[_0x527f0e(0x1ba)]({ 'contents': [{ 'parts': [{ 'text': _0x527f0e(0x1cc) + _0x527f0e(0x1ab) + _0x527f0e(0x241) + _0x527f0e(0x1ed) + _0x527f0e(0x1f3) + _0x527f0e(0x238) + _0x527f0e(0x22a) + _0x527f0e(0x221) + _0x527f0e(0x1bd) + _0x5a660 }] }] }) }), _0x3da0f1 = await _0x1079b2[_0x527f0e(0x1d0)](); return _0x3da0f1[_0x527f0e(0x1d7)] ? (vscode[_0x527f0e(0x1e6)][_0x527f0e(0x244) + _0x527f0e(0x20b)](msgPrefix + (_0x527f0e(0x1f2) + _0x527f0e(0x24d)) + _0x3da0f1[_0x527f0e(0x1d7)][_0x527f0e(0x204)] + ')'), _0x330ca8) : _0x3da0f1?.[_0x527f0e(0x25e)]?.[-0x2e + -0x6 * -0x3b2 + -0x15fe]?.[_0x527f0e(0x243)]?.[_0x527f0e(0x200)]?.[0x301 * 0xd + -0x2597 + -0x176]?.[_0x527f0e(0x1c3)] || _0x330ca8; } catch (_0x2bde72) { return vscode[_0x527f0e(0x1e6)][_0x527f0e(0x244) + _0x527f0e(0x20b)](msgPrefix + (_0x527f0e(0x1e3) + _0x527f0e(0x1e2) + _0x527f0e(0x1ce) + '(') + _0x2bde72[_0x527f0e(0x204)] + ')'), _0x330ca8; } } function deactivate() { } module[_0x2c2fc9(0x1d1)] = { 'activate': activate, 'deactivate': deactivate }; function _0x57c1() { const _0x47a7a9 = ['qvTSk', 'git\x20rev-pa', 'm\x20Gemini\x20(', 'nguage.goo', '-cached', 'ace\x20folder', 'fsPath', 'nSettings', 'execSync', 'max', 'git\x20add\x20.', 'sage', 'it\x22\x20or\x20\x22Re', 'replace', 'VcQgb', 'otRhm', 'NXmqp', 'XFNla', '```', 'candidates', '@ext:dream', '2171871LyHEgx', 'ersdesire.', 'cUfsP', 'applicatio', '\x20short,\x20sp', 'defaultCom', 'push', 'getConfigu', 'HdhWS', 'UvAWZ', 'commit\x20mes', 'nerativela', 'ihlMN', 'nQeuo', 'git\x20diff\x20-', 'zHIDs', 'nd-push.st', '\x20Auto-comm', 'mmit', 'stringify', 'auto-ai-gi', 'https://ge', 'g\x20diff:\x0a\x0a', 'POST', 'node-fetch', 'm/v1beta/m', 'startsWith', 'ZyZaU', 'text', 'artup.\x20Use', '\x20found', 'art.', '\x20the\x20\x22Comm', 'issing.\x20Pl', 'rse\x20--is-i', 'eContent?k', 'odels/gemi', 'Generate\x20a', 'trim', 'th\x20Gemini\x20', 'KuxYe', 'json', 'exports', 'anges', 'ni-2.0-fla', 'n/json', '-tree', 'vscode', 'error', 'Auto\x20AI\x20Gi', '12259648aufSYF', 'FkRlE', '\x20No\x20worksp', '\x20-m\x20\x22', 'executeCom', 'during\x20int', '\x20Failed\x20to', 'git\x20commit', 'GoTPe', 'tacting\x20wi', '\x20Error\x20con', 'ationMessa', 'mmand', 'window', 'bled\x20on\x20st', 'DyMRo', 'ration', 'pop', 'ommit', 'stjoO', 'd\x20professi', 'ion', '305458uJxnAh', 'nd-push.co', 'get', '\x20Error\x20fro', 'onal\x20Git\x20c', 'I\x20key\x20is\x20m', '\x20Running\x20o', 'ngs.', 'ease\x20set\x20i', 'uri', 'start', 'mand\x20to\x20st', 'mand', '4556370SghcvN', '549955PfFKYH', 'ess', 'length', 'parts', 'xgafi', 'join', 'sion\x20setti', 'message', 'autoStart', 'nd-push.re', 'start\x22\x20com', 'rTAhB', '\x20Stopped.', 'Cjafh', 'essage', 'n\x20startup.', 'nd-push.op', 'action.ope', 'registerCo', 'utf8', 'MnkKf', 'CXUeE', 'mitMessage', 'it\x20is\x20disa', 'guFaz', 'OBNxx', 'shift', 'SHllQ', 'git\x20--vers', 'split', 'qZSUl', '399656YLtiwV', 'FzvJr', 'WxsoI', 't-commit-a', 'nside-work', 'e\x20followin', 't\x20Commit:', 'nd-push', 'Updated\x20Ch', 't\x20in\x20exten', 'gleapis.co', 'autoAiGitC', 'it\x20failed\x20', '\x20generate\x20', 'age\x20for\x20th', 'geminiApiK', 'subscripti', 'workspace', 'erval:\x20', 'commands', 'olders', 'showInform', 'g...', '\x20Auto\x20comm', '\x20Restartin', 'sh:generat', 'CXYDi', 'workbench.', 'ommit\x20mess', 'commitDela', 'ignore', 'enSettings', 'ons', 'JtHPQ', 'RWvGy', 'it\x20failed:', '5sajajZ', 'ecific,\x20an', 'cERUS', 'content', 'showErrorM', 'ey=', '1379538MVdhDm', '\x20Gemini\x20AP', 'child_proc', 'workspaceF', 'YFfXo']; _0x57c1 = function () { return _0x47a7a9; }; return _0x57c1(); }